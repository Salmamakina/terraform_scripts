---
- name: Cloner le repo et exécuter les scripts
  hosts: all
  become: yes
  tasks:
    - name: Mise à jour et mise à niveau des paquets
      apt:
        update_cache: yes
        upgrade: dist
        autoremove: yes
        autoclean: yes

    - name: Installer Git si nécessaire
      apt:
        name: git
        state: present
      when: ansible_os_family == "Debian"

    - name: Installer Java si nécessaire
      apt:
        name:
          - openjdk-11-jdk
          - ca-certificates-java

    - name: Cloner le repo GitHub
      git:
        repo: "https://github.com/Salmamakina/script-installation-bigdata"
        dest: "/tmp/repo_installation"
        version: main
        force: yes

    - name: Donner les permissions d'exécution aux scripts
      file:
        path: "/tmp/repo_installation/{{ item }}"
        mode: "0755"
      loop:
        - install-hadoop-spark.sh
        - install-drill-zookeeper.sh
        - Adding-env-var.sh

    - name: Obtenir le nombre de cœurs CPU
      shell: "lscpu | grep '^CPU(s):' | awk '{print $2}'"
      register: cpu_output
      changed_when: false

    - name: Extraire le nombre de cœurs CPU
      set_fact:
        max_cpu: "{{ cpu_output.stdout }}"

    - name: Obtenir la RAM totale
      shell: "free -m | grep '^Mem:' | awk '{print $2}'"
      register: ram_output
      changed_when: false

    - name: Extraire la RAM totale en MB
      set_fact:
        max_ram: "{{ ram_output.stdout }}"

    - name: Tâches spécifiques au master
      when: inventory_hostname == "master-vm-test"
      block:
        - name: Vérifier si Docker est installé
          command: docker --version
          register: docker_version
          failed_when: false
          changed_when: false

        - name: Installer Docker si nécessaire
          apt:
            name: docker-ce
            state: present
          when: docker_version.rc != 0

        - name: Démarrer Docker
          systemd:
            name: docker
            state: started
            enabled: yes

        - name: Télécharger Docker Compose
          shell: >
            curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          args:
            creates: /usr/local/bin/docker-compose

        - name: Donner les permissions d'exécution à Docker Compose
          file:
            path: /usr/local/bin/docker-compose
            mode: '0755'

        - name: Ajouter l'utilisateur au groupe Docker
          user:
            name: "{{ ansible_user }}"
            group: docker
            append: yes
        - name: Vérifier si le fichier docker-compose.yml existe
          stat:
            path: /tmp/repo_installation/docker-compose.yml
          register: docker_compose_file

        - name: Exécuter docker-compose
          shell: /usr/local/bin/docker-compose -f /tmp/repo_installation/docker-compose.yml up -d
          args:
            chdir: /tmp/repo_installation
          when: docker_compose_file.stat.exists

    - name: Extraire le rôle du host (master ou worker)
      set_fact:
        role: "{{ inventory_hostname.split('-')[0] }}"

    - name: Installer Hadoop et Spark
      shell: "bash /tmp/repo_installation/install-hadoop-spark.sh {{ hostvars['master-vm-test'].ansible_host }} {{ role }} {{ max_cpu }} {{ max_ram }}"
      become: yes
      become_user: root

    - name: Ajouter les variables d'environnement
      shell: "bash /tmp/repo_installation/Adding-env-var.sh {{ role }} /root"
      become: yes

    - name: Installer Drill et Zookeeper
      shell: "bash /tmp/repo_installation/install-drill-zookeeper.sh {{ hostvars['master-vm-test'].ansible_host }} {{ hostvars['worker-vm-test'].ansible_host }} {{ role }}"
      become: yes
      become_user: root


